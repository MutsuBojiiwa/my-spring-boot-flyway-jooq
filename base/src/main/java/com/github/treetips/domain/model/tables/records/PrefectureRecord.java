/**
 * This class is generated by jOOQ
 */
package com.github.treetips.domain.model.tables.records;


import com.github.treetips.domain.model.tables.Prefecture;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 都道府県マスタ
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PrefectureRecord extends UpdatableRecordImpl<PrefectureRecord> implements Record3<Byte, Byte, String> {

	private static final long serialVersionUID = -923749769;

	/**
	 * Setter for <code>test.prefecture.area_cd</code>. エリアコード
	 */
	public void setAreaCd(Byte value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>test.prefecture.area_cd</code>. エリアコード
	 */
	public Byte getAreaCd() {
		return (Byte) getValue(0);
	}

	/**
	 * Setter for <code>test.prefecture.prefecture_cd</code>. 都道府県コード
	 */
	public void setPrefectureCd(Byte value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>test.prefecture.prefecture_cd</code>. 都道府県コード
	 */
	public Byte getPrefectureCd() {
		return (Byte) getValue(1);
	}

	/**
	 * Setter for <code>test.prefecture.prefecture_name</code>. 都道府県名
	 */
	public void setPrefectureName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>test.prefecture.prefecture_name</code>. 都道府県名
	 */
	public String getPrefectureName() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Byte> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Byte, Byte, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Byte, Byte, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field1() {
		return Prefecture.PREFECTURE.AREA_CD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field2() {
		return Prefecture.PREFECTURE.PREFECTURE_CD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Prefecture.PREFECTURE.PREFECTURE_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value1() {
		return getAreaCd();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value2() {
		return getPrefectureCd();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getPrefectureName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PrefectureRecord value1(Byte value) {
		setAreaCd(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PrefectureRecord value2(Byte value) {
		setPrefectureCd(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PrefectureRecord value3(String value) {
		setPrefectureName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PrefectureRecord values(Byte value1, Byte value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PrefectureRecord
	 */
	public PrefectureRecord() {
		super(Prefecture.PREFECTURE);
	}

	/**
	 * Create a detached, initialised PrefectureRecord
	 */
	public PrefectureRecord(Byte areaCd, Byte prefectureCd, String prefectureName) {
		super(Prefecture.PREFECTURE);

		setValue(0, areaCd);
		setValue(1, prefectureCd);
		setValue(2, prefectureName);
	}
}
